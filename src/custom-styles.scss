@use "@angular/material" as mat;
@include mat.core();

$codezilla-theme: (
  50: #e8e8f5,
  100: #c4c6e5,
  200: #9ea1d4,
  300: #797cc2,
  400: #5e60b5,
  500: #4444a8,
  600: #3e3c9e,
  700: #363293,
  contrast: (
    50: #ffffff,
    100: #ffffff,
    200: #ffffff,
    300: #ffffff,
    400: #ffffff,
    500: white,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$codezilla-primary: mat.define-palette($codezilla-theme);
$codezilla-accent: mat.define-palette(mat.$grey-palette, A200);
// The warn palette is optional (defaults to red).
$codezilla-warn: mat.define-palette(mat.$red-palette);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$codezilla-theme: mat.define-light-theme(
  (
    color: (
      primary: $codezilla-primary,
      accent: $codezilla-accent,
      warn: $codezilla-warn,
    ),
  )
);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($codezilla-theme);
